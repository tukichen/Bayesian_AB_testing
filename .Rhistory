1+2
install.packages("ggplot2")
install.pacakges('Packagename')
install.pacakges('aod')
library(aod)
install.packages("aod")
install.packages("ggplot2")
library(aod)
library(ggplot2)
mydata  = read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
head(mydata)
summary(mydata)
sapply(mydata, sd)
sapply(mydata, mean)
xtabs(~ admit + rank, data= mydata)
dim(data)
length(data)
shape(data)
len(mydata)
length(mydata)
dim(mydata)
mydata$rank = factor(mydata$rank)
mydata$rank
mylogit = glm(admit ~ gre + gpa + rank, data= mydata, family= 'binomial')
summary(mylogit)
confit(mylogit)
confint(mylogit)
confint.default(mylogit)
wald.test(b = coef(mylogit), Sigma= vcov(mylogit), Terms = 4:6)
coef(mylogit)
vcov(mylogit)
help(wald.test)
l= cbind(0,0,0,1,-1,0)
l
b
exp(coef(mylogit))
IRkernel::installspec()
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
IRkernel::installspec()
IRkernel::installspec(user = FALSE)
library(IRkernel
)
devtools::install_github('IRkernel/IRkernel')
update.packages()
y
IRkernel::installspec(user = FALSE)
q
quit()
library(shina
)
library(shiny)
quit()
quit()
intall.packages('shiny')
install.packages('shiny')
library(shiny)
runExample("01_hello")
system.file("examples", package="shiny")
system.file("examples, package="shiny")
system.file("examples", package="shiny")
runExample("02_text") # tables and data frames
runExample("03_reactivity") # a reactive expression
runExample("04_mpg") # global variables
runExample("09_upload") # file upload wizard
runExample("08_html") # Shiny app built from HTML
runExample("07_widgets") # help text and submit buttons
install.packages(c("maps", "mapproj"))
quit()
R.version
install.packages(c("quant", "mod"))
install.packages("quantmod")
install.packages("shiny")
install.packages("maps")
install.packages("mapproj")
install.packages("BEST")
library(BEST)
library(BEST)
install.packages("rjags")
library(rjags)
library(rjags)
library(rjags)
install.packages("jagsUI")
install.packages("coda")
library(BEST)
library(rjags)
install.packages("rjags")
library("rjags")
library("rjags")
library("rjags")
install.packages("BayesianFirstAid")
install.packages("ggplot2")
install.packages("shiny")
install.pacakge("nimble")
for (i in 0:num_tests) {
assign(paste0("DF", i), data.frame(A=rnorm(10), B=rnorm(10)))
}
num_tests=3
for (i in 0:num_tests) {
assign(paste0("DF", i), data.frame(A=rnorm(10), B=rnorm(10)))
}
View(DF0)
View(DF1)
View(DF2)
View(DF3)
sample(seq(as.Date('1999/01/01'), as.Date('2000/01/01'), by="day"), 12)
sample(seq(as.Date('1999-01-01'), as.Date('2000-01-01'), by="day"), 12)
sample(seq(as.Date('1999-01-01'), as.Date('2000-01-01'), by="day"), 15)
library(dplyr)
data(mtcars)
mtcars <- tbl_df(mtcars)
# count frequency
mtcars %>%
group_by(am, gear) %>%
summarise(n = n())
mtcars %>%
group_by(am, gear) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
View(mtcars)
shiny::runApp('Documents/shiny_apps/AB_test')
runApp('Documents/shiny_apps/AB_test')
runApp('Documents/shiny_apps/AB_test')
runApp('Documents/shiny_apps/AB_test')
runApp('Documents/shiny_apps/AB_test')
